plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id 'com.diffplug.spotless' version '5.8.2'
	id 'org.openapi.generator' version '5.0.0-beta3'
	id 'idea'
}

sourceSets {
	intTest {
		compileClasspath += sourceSets.main.output
		runtimeClasspath += sourceSets.main.output
	}
}

group = 'com.eshilov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}

	intTestImplementation.extendsFrom implementation
	intTestImplementation.extendsFrom testImplementation
}

repositories {
	mavenCentral()
}

idea {
	module {
		testSourceDirs += sourceSets.intTest.java.srcDirs
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-ui:1.2.32'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	compileOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

spotless {
	java {
		targetExclude '**/*/generated/**/*.*'
		googleJavaFormat('1.9').aosp()
	}
}

def openApiDir = "$projectDir/src/main/resources/openapi"
def openApiRootPackage = "com.eshilov.auth.generated"
openApiGenerate {
	generatorName = "spring"
	inputSpec = "$openApiDir/openapi.yml"
	templateDir = "$openApiDir/templates"
	apiPackage = "${openApiRootPackage}.api"
	modelPackage = "${openApiRootPackage}.model"
	outputDir = "$projectDir/src/main/java"
	generateModelTests = false
	generateModelDocumentation = false
	generateApiTests = false
	generateApiDocumentation = false
	configOptions = [
			sourceFolder: "",
			useBeanValidation: "false",
			performBeanValidation: "false",
			interfaceOnly: "true"
	]
	globalProperties = [
			apis: "",
			models: ""
	]
}

clean {
	doFirst {
		delete "$projectDir/src/main/java/com/eshilov/auth/generated"
	}
}

compileJava.dependsOn(tasks.openApiGenerate)
